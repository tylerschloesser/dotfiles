import fs from 'fs'
import path from 'path'

async function main() {


  const args = process.argv.slice(2)

  const [ tool ] = args

  if (tool === 'tsx') {
    const name = args[1]
    const dir = args[2] ?? '.'
    console.log('creating typescript template with name', name)

    await fs.promises.writeFile(path.join(dir, `${name}.tsx`),`
import React from 'react'

export interface ${name}Props {
}

export const ${name} = ({
}: ${name}Props) => {
  return (
    <div>
      auto generated by multi tool!
    </div>
  )
}
      `.trim())

    await fs.promises.writeFile(path.join(dir, `${name}.stories.tsx`), `
import React, { ComponentProps } from 'react'
import { Story  } from '@storybook/react/types-6-0'

import { ${name} } from './${name}'

export default {
  title: '${name}',
  component: ${name},
}

const Template: Story<ComponentProps<typeof ${name}>> = (args) => (
  <${name} {...args} />
);

export const FirstStory = Template.bind({});
FirstStory.args = {
  /* the args you need here will depend on your component */
};
      `.trim())
  }

}

main()
